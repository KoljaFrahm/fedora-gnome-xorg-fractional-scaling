# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      create_release:
        description: "Create a GitHub release with built RPMs"
        required: false
        type: boolean
        default: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: fedora:41

    outputs:
      mutter_version: ${{ steps.extract_versions.outputs.MUTTER_VERSION }}
      gcc_version: ${{ steps.extract_versions.outputs.GCC_VERSION }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract versions
        id: extract_versions
        run: |
          MUTTER_VERSION=$(sed -n 's/^Version:\s*\(.*\)/\1/p' rpmbuild/SPECS/mutter.spec)
          GCC_VERSION=$(sed -n 's/^Version:\s*\(.*\)/\1/p' rpmbuild/SPECS/gnome-control-center.spec)
          echo "MUTTER_VERSION=$MUTTER_VERSION" >> $GITHUB_OUTPUT
          echo "GCC_VERSION=$GCC_VERSION" >> $GITHUB_OUTPUT

      - name: Install extra build dependencies
        run: dnf in -y rpm-build

      - name: Install mutter dependencies
        run: dnf builddep -y rpmbuild/SPECS/mutter.spec

      - name: Install gcc dependencies
        run: dnf builddep -y rpmbuild/SPECS/gnome-control-center.spec

      - name: create target directory
        run: mkdir rpms

      - name: build mutter binary
        run: rpmbuild -D "_sourcedir $PWD/rpmbuild/SOURCES" -D "_rpmdir $PWD/rpms" -D "_srcrpmdir ${PWD}/rpms" --clean -ba rpmbuild/SPECS/mutter.spec

      - name: build gcc binary
        run: rpmbuild -D "_sourcedir $PWD/rpmbuild/SOURCES" -D "_rpmdir $PWD/rpms" -D "_srcrpmdir ${PWD}/rpms" --clean -ba rpmbuild/SPECS/gnome-control-center.spec

      - name: Archive RPM packages
        uses: actions/upload-artifact@v4
        with:
          name: rpms-fedora
          path: |
            rpms/**/*.rpm

  release:
    if: github.event.inputs.create_release == 'true'
    needs: build
    runs-on: ubuntu-latest
    env:
      MUTTER_VERSION: ${{ needs.build.outputs.mutter_version }}
      GCC_VERSION: ${{ needs.build.outputs.gcc_version }}

    steps:
      - name: Download built RPMs
        uses: actions/download-artifact@v4
        with:
          name: rpms-fedora
          path: rpms

      - name: Determine next release tag
        run: |
          BASE_TAG="${GCC_VERSION}-v"
          EXISTING_TAGS=$(git tag --list "${BASE_TAG}*" | sed 's/.*-v//' | sort -V | tail -n 1)
          if [[ -z "$EXISTING_TAGS" ]]; then
            NEW_TAG="${BASE_TAG}1"
          else
            NEW_TAG="${BASE_TAG}$((EXISTING_TAGS + 1))"
          fi
          echo "RELEASE_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: rpms/**/*.rpm
          tag_name: ${{ env.RELEASE_TAG }}
          name: "mutter-${{ env.MUTTER_VERSION }} and gnome-control-center-${{ env.GCC_VERSION }}"
          body: "Automated release for ${{ env.RELEASE_TAG }}"
          generate_release_notes: true
          draft: false
          prerelease: false
